from common.db_api import get_obj_by_id
from common.enums import ImageModels, TextModels
from common.models import Tariff, User, Report
from common.settings import settings
from tgbot_app.utils.misc import decl


async def gen_profile_text(user: User) -> str:
    tariff: Tariff = user.tariff

    if not tariff:
        tariff_str = "Free"
    elif tariff.is_trial:
        main_tariff: Tariff = await get_obj_by_id(Tariff, tariff.main_tariff_id)
        tariff_str = f"Trial {main_tariff.token_balance}"
    else:
        tariff_str = f"PREMIUM {tariff.token_balance}"

    text = f'üë®‚Äçüíª <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å</b>{(", " + user.first_name) if user.first_name else "<b>!</b>"}\n'
    if user.username:
        text += f"‚îú –í–∞—à —é–∑–µ—Ä–Ω–µ–π–º: <code>@{user.username}</code>\n"
    text += f"‚îî –í–∞—à ID: <code>{user.id}</code>\n\nüí≥ –ü–æ–¥–ø–∏—Å–∫–∞: <b>{tariff_str}</b>\n"

    if not tariff:
        text += (
            f"‚îú –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã: {user.token_balance}\n"
            f"‚îú {user.gemini_daily_limit} –∏–∑ {settings.FREE_GEMINI_QUERIES} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π Gemini Pro\n"
            f"‚îú {user.sd_daily_limit} –∏–∑  {settings.FREE_SD_QUERIES} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π StableDiffusion\n"
            f"‚îî {user.kandinsky_daily_limit} –∏–∑ {settings.FREE_KANDINSKY_QUERIES} –≥–µ–Ω–µ—Ä–∞—Ü–∏–π Kandinsky\n\n"
            f"<i>* –í–∞—à–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞.</i>"
        )
    else:
        words, time_left = user.sub_time_left()
        time_left_str = f"{time_left} {decl(time_left, words)}"

        text += (
            f"‚îú –ü–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑: <u>{time_left_str}</u>\n"
            f"‚îú –ö–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ: {tariff.token_balance} —Ç–æ–∫–µ–Ω–æ–≤\n"
            f"‚îú –¢–µ–∫—É—â–∏–µ –∫–æ–ª-–≤–æ —Ç–æ–∫–µ–Ω–æ–≤: {user.token_balance}\n"
            f"‚îî –ë–µ–∑–ª–∏–º–∏—Ç ChatGPT 3.5 + –°–∏–Ω—Ç–µ–∑ —Ä–µ—á–∏"
        )

    return text


def gen_txt_settings_text(user: User) -> str:
    text = ("üîπ –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã –≥–æ–ª–æ—Å–æ–º –∏ –ø–æ–ª—É—á–∞—Ç—å –æ–∑–≤—É—á–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã, –∞ —Ç–∞–∫–∂–µ –∏–∑–º–µ–Ω—è—Ç—å –≤–µ—Ä—Å–∏–∏ –º–æ–¥–µ–ª–∏. "
            "–°—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –≤–µ—Ä—Å–∏–∏ ChatGPT.\n\nüíé <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> ")

    if user.txt_model == TextModels.GEMINI:
        if not user.tariff:
            text += (
                f"{settings.MODELS[user.txt_model].cost} —Ç–æ–∫–µ–Ω–∞\n"
                f"‚îú –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {user.gemini_daily_limit} –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n"
                f"‚îî –ù–∞ –º–æ–¥–µ–ª—å ChatGPT 3.5 Turbo (—ç—Ç–æ —Å–∞–º–∞—è –ø–æ–ø—É–ª—è—Ä–Ω–∞—è –º–æ–¥–µ–ª—å) —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –±–µ–∑–ª–∏–º–∏—Ç –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ."
            )
        else:
            text += f"–ë–µ–∑–ª–∏–º–∏—Ç –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ"
    else:
        text += f"{settings.MODELS[user.txt_model].cost} —Ç–æ–∫–µ–Ω–æ–≤"

    return text


def gen_img_settings_text(user: User) -> str:
    text = (f"üîπ –î–ª—è –í–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π Dall-E 2, Dall-E3, Stable diffusion –∏ –¥—Ä. "
            f"–ï–∂–µ–¥–Ω–µ–≤–Ω–æ –º—ã –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞–¥ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –¥—Ä—É–≥–∏—Ö –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–π –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n\n"
            f"üíé <b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {settings.MODELS[user.img_model].cost} —Ç–æ–∫–µ–Ω–æ–≤")

    if not user.tariff_id and user.img_model in (ImageModels.KANDINSKY, ImageModels.STABLE_DIFFUSION):
        num = user.kandinsky_daily_limit if user.img_model == ImageModels.KANDINSKY else user.sd_daily_limit
        text += f"\n‚îî –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {num} –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤"

    return text


async def gen_confirm_tariff_text(tariff: Tariff) -> str:
    if tariff.is_trial:
        main_tariff = await get_obj_by_id(Tariff, tariff.main_tariff_id)
        text = (f"üí≥ –í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ –ü–†–û–ë–ù–´–ô —Ç–∞—Ä–∏—Ñ –∑–∞ {tariff.price}‚ÇΩ <b>–Ω–∞ {tariff.days} –¥–Ω—è</b>. –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –í–∞–º "
                f"{tariff.token_balance} —Ç–æ–∫–µ–Ω–æ–≤. –ï—Å–ª–∏ –í—ã –Ω–µ –æ—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –Ω–µ–≥–æ (—ç—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å), —Ç–æ —Ç–∞—Ä–∏—Ñ "
                f"–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–æ–¥–ª–∏—Ç—Å—è –∑–∞ {main_tariff.price}‚ÇΩ –µ—â–µ –Ω–∞ {main_tariff.days} –¥–Ω–µ–π –ø–æ "
                f"–∫–æ—Ç–æ—Ä–æ–º—É –í–∞–º –±—É–¥–µ—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ —É–∂–µ {main_tariff.token_balance} —Ç–æ–∫–µ–Ω–æ–≤.")
    else:
        text = (f"üí≥ –í—ã –æ—Ñ–æ—Ä–º–ª—è–µ—Ç–µ —Ç–∞—Ä–∏—Ñ –∑–∞ {tariff.price}‚ÇΩ. –û–Ω –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç –í–∞–º {tariff.token_balance} —Ç–æ–∫–µ–Ω–æ–≤ –Ω–∞ "
                f"{tariff.days} –¥–Ω–µ–π, –∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤ —É–º–µ–Ω—å—à–∏—Ç—Å—è –≤ 2 —Ä–∞–∑–∞.")

    text += (f"\n\n–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –¥–∞–ª—å–Ω–µ–π—à–∏–µ —Å–ø–∏—Å–∞–Ω–∏—è, –∞ —Ç–∞–∫–∂–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö "
             f"–¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è <a href='{settings.DOMAIN}/offer/'>–ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã</a>.")

    return text


def gen_refund_text(can_refund: bool) -> str:
    text = "üí≥ <b>–•–æ—Ç–∏—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏? </b>\n"

    if can_refund:
        text += ("–ü—Ä–∏ –æ—Ç–∫–∞–∑–µ –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –í–∞–º –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤, –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã –±—É–¥—É—Ç –∞–Ω–Ω—É–ª–∏—Ä–æ–≤–∞–Ω—ã, –∞ –≤—Å–µ "
                 "—Ç–æ–∫–µ–Ω—ã –∫—É–ø–ª–µ–Ω–Ω—ã–µ –ø–æ –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ–¥–µ–ª–µ–Ω—ã –Ω–∞ –¥–≤–∞. –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ –ø–ª–∞—Ç–µ–∂–Ω—ã–π –∞–≥—Ä–µ–≥–∞—Ç–æ—Ä "
                 "Robokassa. –í —Ç–µ—á–µ–Ω–∏–∏ 2-—Ö –¥–Ω–µ–π –í–∞–º –ø—Ä–∏–¥–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏ –Ω–∞ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ "
                 "–ø–æ—á—Ç—É —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏ –æ–ø–ª–∞—Ç—É. –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ—á–µ–Ω—å –±—ã—Å—Ç—Ä—ã–π, –Ω–æ –≤ —Ä–µ–¥–∫–∏—Ö "
                 "—Å–ª—É—á–∞—è—Ö –Ω—É–∂–Ω–æ –æ–∂–∏–¥–∞—Ç—å –æ—Ç 7 –¥–æ 30 –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–Ω–µ–π.")
    else:
        text += "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ —Å—Ä–æ–∫–∞, –Ω–æ –≤–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤ —Å–¥–µ–ª–∞—Ç—å —É–∂–µ –Ω–µ–ª—å–∑—è."

    text += (f' –°–æ–≥–ª–∞—Å–Ω–æ <a href="{settings.DOMAIN}/offer/">–¥–æ–≥–æ–≤–æ—Ä—É –æ—Ñ–µ—Ä—Ç—ã</a>, —Å –∫–æ—Ç–æ—Ä—ã–º –í—ã —Å–æ–≥–ª–∞—Å–∏–ª–∏—Å—å –ø—Ä–∏ '
             f"–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏, —É –í–∞—Å –µ—Å—Ç—å 48 —á–∞—Å–æ–≤ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ —Å—Ä–µ–¥—Å—Ç–≤.")

    return text


def gen_premium_canceled_text(can_refund: bool) -> str:
    text = "–ù–∞–º –æ—á–µ–Ω—å –∂–∞–ª—å —á—Ç–æ –≤—ã –æ—Ç–∫–∞–∑–∞–ª–∏—Å—å –æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏, –Ω–∞–¥–µ–µ–º—Å—è –≤—ã –≤–µ—Ä–Ω–µ—Ç–µ—Å—å –∫ –Ω–∞–º —Å–Ω–æ–≤–∞!"
    if can_refund:
        text += ("\n\n–°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –í–∞–º –æ–±—Ä–∞—Ç–Ω–æ –Ω–∞ –∫–∞—Ä—Ç—É, —Å –∫–æ—Ç–æ—Ä–æ–π –≤—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏–ª–∏ –æ–ø–ª–∞—Ç—É. "
                 "–°—Ä–æ–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –æ—Ç 1 —á–∞—Å–∞ –¥–æ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.")

    return text


def gen_token_text(user: User) -> str:
    text = (f"üíé <b>–¢–æ–∫–µ–Ω—ã</b>\n–≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞, –∫–æ—Ç–æ—Ä–æ–π —Ç—ã –º–æ–∂–µ—à—å –æ–ø–ª–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –∑–∞–ø—Ä–æ—Å—ã –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö.\n\n"
            f"–ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–Ω–∏–º–∞—é —É—Å–ª–æ–≤–∏—è "
            f"<a href='{settings.DOMAIN}/offer/'>–ø—É–±–ª–∏—á–Ω–æ–π –æ—Ñ–µ—Ä—Ç—ã</a>.")

    if not user.tariff or user.tariff.is_trial:
        text += "‚ù§Ô∏è‚Äçüî•–° –ø—Ä–µ–º–∏—É–º –ø–æ–¥–ø–∏—Å–∫–æ–π —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–∫–µ–Ω–æ–≤ –±—É–¥–µ—Ç –≤ 2 —Ä–∞–∑–∞ –¥–µ—à–µ–≤–ª–µ."

    return text


def gen_report_text(report: Report) -> str:
    text = (
        f"üë• <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:</b>\n"
        f"‚îú –í—Å–µ–≥–æ: {report.users_cnt}\n"
        f"‚îî –†–µ—Ñ. —Å—Å—ã–ª–∫–∏: {report.users_with_link_cnt}\n\n"
        f"üìà <b>–ù–æ–≤—ã–µ –∑–∞ —Å—É—Ç–∫–∏:</b>\n"
        f"‚îú –í—Å–µ–≥–æ: {report.new_users_cnt}\n"
        f"‚îú –° —Ä–µ—Ñ. —Å—Å—ã–ª–æ–∫: {report.new_users_with_link_cnt}\n"
        f"‚îî –° –ø–æ–∏—Å–∫–∞: {report.new_users_from_search_cnt}\n\n"
        f"üèÉ <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—É—Ç–∫–∏ –ø–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—è–º:</b>\n"
        f"‚îú –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {report.queries_cnt}\n"
        f"‚îú ChatGPT 3.5: {report.queries_gpt_3_turbo_cnt}\n"
        f"‚îú ChatGPT 4 turbo: {report.queries_gpt_4_turbo_cnt}\n"
        f"‚îú –Ø–Ω–¥–µ–∫—ÅGPT: {report.queries_yagpt_cnt}\n"
        f"‚îú –Ø–Ω–¥–µ–∫—ÅGPT Lite: {report.queries_yagpt_lite_cnt}\n"
        f"‚îú Gemini: {report.queries_gemini_cnt}\n"
        f"‚îú Claude: {report.queries_claude_cnt}\n"
        f"‚îú StableDiffusion: {report.queries_sd_cnt}\n"
        f"‚îú DallE-2: {report.queries_dalle_2_cnt}\n"
        f"‚îú DallE-3: {report.queries_dalle_3_cnt}\n"
        f"‚îú Midjourney: {report.queries_mj_cnt}\n"
        f"‚îú Kandinsky: {report.queries_kandinsky_cnt}\n"
        f"‚îú –¢–µ–∫—Å—Ç –≤ –≤–∏–¥–µ–æ: {report.txt_to_video_cnt}\n"
        f"‚îú –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤–∏–¥–µ–æ: {report.img_to_video_cnt}\n"
        f"‚îú –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞ –≤–∏–¥–µ–æ: {report.rembg_cnt}\n"
        f"‚îú –í–∏–¥–µ–æ –≤ –º—É–ª—å—Ç: {report.cartoon_video_cnt}\n"
        f"‚îî PicaArt: {report.pica_video_cnt}\n\n"
        f"üë®‚Äçüéì <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ —Å—É—Ç–∫–∏ –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º:</b>\n"
        f"‚îú –î–ª—è —É—á–µ–±—ã: {report.diploma_cnt + report.rewrite_cnt + report.vision_cnt}\n"
        f"‚îÇ ‚îú –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç: {report.diploma_cnt}\n"
        f"‚îÇ ‚îú –†–µ—Ä–∞–π—Ç–∏–Ω–≥: {report.rewrite_cnt}\n"
        f"‚îÇ ‚îî –†–µ—à–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ç–æ: {report.vision_cnt}\n"
        f"‚îú –î–ª—è —Ä–∞–±–æ—Ç—ã: {report.articles_cnt}\n"
        f"‚îÇ ‚îî –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏: {report.articles_cnt}\n"
        f"‚îú –î—Ä—É–≥–∏–µ: {report.tts_cnt + report.stt_cnt + report.rembg_cnt}\n"
        f"‚îÇ ‚îú –¢–µ–∫—Å—Ç –≤ —Ä–µ—á—å: {report.tts_cnt}\n"
        f"‚îÇ ‚îú –†–µ—á—å –≤ —Ç–µ–∫—Å—Ç: {report.stt_cnt}\n"
        f"‚îî‚îÄ‚î¥ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–æ–Ω–∞: {report.rembg_cnt}\n\n"
        f"üí∞ <b>–ü–ª–∞—Ç–µ–∂–∏ –∑–∞ —Å—É—Ç–∫–∏:</b>\n"
        f"‚îú –í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {report.prem_users_cnt}\n"
        f"‚îú –ù–æ–≤—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {report.new_prem_invoices_cnt}—à—Ç –Ω–∞ —Å—É–º–º—É {report.new_prem_invoices_sum}‚ÇΩ\n"
        f"‚îú –ü—Ä–æ–¥–∞–∂ —Ç–æ–∫–µ–Ω–æ–≤: {report.new_token_invoices_cnt}—à—Ç –Ω–∞ —Å—É–º–º—É {report.new_token_invoices_sum}‚ÇΩ\n"
        f"‚îú –í—Å–µ–≥–æ: {report.new_invoices_cnt} –ø–ª–∞—Ç–µ–∂–µ–π\n"
        f"‚îú –û–±—â–∏–π –æ–±–æ—Ä–æ—Ç: {report.new_invoices_sum}\n"
        f"‚îú –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {report.avg_bill}\n"
    )

    for price, count in report.tariffs_buys_dict.items():
        text += f"‚îú –ü–æ–∫—É–ø–æ–∫ –∑–∞ {price}‚ÇΩ: {count}\n"

    text += f"‚îî –ü—Ä–æ–¥–ª–µ–Ω–∏–π: {report.recurring_invoices_cnt}"

    return text
