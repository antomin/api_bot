services:
  web:
    container_name: web
    build:
      dockerfile: ./DockerfileFlask
    restart: on-failure
    depends_on:
      - db
    volumes:
      - ./data/templates:/code/flask_app/templates/user_templates
      - ./logs/flask:/code/flask_app/logs
    command: "gunicorn --bind 0.0.0.0:5000 --workers 10 wsgi:app"

  bot:
    container_name: bot
    build:
      dockerfile: ./DockerfileBot
    restart: on-failure
    depends_on:
      - db
      - web
    volumes:
      - ./data/tmp:/code/tgbot_app/media/tmp
      - ./logs/bot:/code/tgbot_app/logs
    command: "python run_bot.py"

  nginx:
    container_name: nginx
    image: nginx:stable
    restart: on-failure
    depends_on:
      - web
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - ./data/tnp:/bot_tmp
      - ./data/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx/
    ports:
      - "80:80"
      - "443:443"


  db:
    image: postgres:16.2-alpine
    restart: on-failure
    environment:
      - 'POSTGRES_DB=${DB_NAME}'
      - 'POSTGRES_USER=${DB_USER}'
      - 'POSTGRES_PASSWORD=${DB_PASS}'
    volumes:
      - ./data/pg_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'

volumes:
  pg_data:
